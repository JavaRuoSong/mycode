package com.atguigu.java;
/*static :静态的
 * static 可用来修饰 ：属性，方法，内部类，代码块。
 * 
 * 
 * 使用static修饰属性：静态变量（类变量）
 * 		属性：
 * 			1.是否按static修饰又分为：静态属性vs 非静态属性（实例变量）
 * 			2.实例变量：创建了类的多个对象，每个对象拥有一套类中的非静态属性。当修改其中一个对象的非静态属性
 * 			时，不会导致其他对象中同样的属性值的修改
 * 			3.静态变量：创建了类的多个对象，多个对象共享同一个静态变量。当通过某一个对象修改静态变量
 * 			时，会导致静态变量更新。
 * 		
 * 		说明：
 * 			1.静态变量随着类的加载而加载
 * 			2.静态变量早于对象的创建
 * 			3.由于类只会加载一次，则静态变量在内存中只会存在一份：存在方法区的静态域中
 * 		举例：Math.PI
 * 				类变量   实例变量				
 * 		类		 yes      no
 * 		对象       yes     yes
 * 
 * 使用static修饰方法:静态方法
 * 		随着类的加载而加载，可以通过“类.静态方法”进行调用
 * 				静态方法  非静态方法
 * 		类		 yes      no
 * 		对象       yes     yes
 * 		
 * 		静态方法中，之鞥调用静态的方法或、
 * 		非静态方法中，既可以调用非静态的方法或属性，也可以调用静态的方法或属性
 * 
 * 
 * 注意！！
 * 		1.在静态的方法内，不能使用this。 super
 * 		2.关于静态属性和静态方法的使用，从生命周期角度理解
 * 
 * 总结：
 * 		大家都一样的属性可以声明为静态	
 * 
 * 		操作静态属性的方法通常也是静态的
 * 
 * 		工具类中的方法通常声明为静态，（不通过创建对象就可以调用）Math，Arrays，Collections
 * 
 * 		
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * */
public class ReviewTest {

}
